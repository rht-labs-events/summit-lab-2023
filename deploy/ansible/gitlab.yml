---

- hosts: localhost
  tasks:
    - name: Create and Import guestbook to GitLab
      community.general.gitlab_project:
        api_url: "{{ api_url }}"
        api_username: "{{ api_username }}"
        api_password: "{{ api_password }}" 
        name: guestbook
        import_url: https://github.com/rht-labs-events/summit-lab-2023-guestbook 
        visibility: public
        state: present
    - name: Create and Import app main to GitLab
      community.general.gitlab_project:
        api_url: "{{ api_url }}"
        api_username: "{{ api_username }}"
        api_password: "{{ api_password }}"
        name: widget-main
        import_url: https://github.com/etsauer/che-demo-app/
        visibility: public
        state: present
    - name: Create and Import app front-end to GitLab
      community.general.gitlab_project:
        api_url: "{{ api_url }}"
        api_username: "{{ api_username }}"
        api_password: "{{ api_password }}" 
        name: widget-frontend
        import_url: https://github.com/etsauer/che-demo-app-ui/ 
        visibility: public
        state: present
    - name: Create and Import git project to GitLab
      community.general.gitlab_project:
        api_url: "{{ api_url }}"
        api_username: "{{ api_username }}"
        api_password: "{{ api_password }}" 
        name: widget-backend
        import_url: https://github.com/etsauer/che-demo-app-service 
        visibility: public
        state: present
    - name: Obtain GitLab Access Token
      uri:
        url: "{{ api_url }}/oauth/token"
        method: POST
        body_format: json
        headers:
          Content-Type: application/json
        body: >
          {
          "grant_type": "password",
          "username": "{{ gitlab_root_username }}",
          "password": "{{ gitlab_root_password }}"
          }
      register: gitlab_access_token
    - name: get oauth apps
      uri:
        url: "{{ api_url }}/api/v4/applications"
        method: GET
        headers:
          Authorization: "Bearer {{ gitlab_access_token.json.access_token }}"
      register: oauth_apps
    - name: Create oauth integration
      when: not lookup('ansible.utils.index_of', oauth_apps.json, 'eq', 'devspaces', 'application_name')
      block:
      - name: create oauth app for devspaces
        uri:
          url: "{{ api_url }}/api/v4/applications"
          method: POST
          headers:
            Authorization: "Bearer {{ gitlab_access_token.json.access_token }}"
          body_format: json
          body:
            name: devspaces
            redirect_uri: "https://devspaces.apps.{{ cluster_domain }}/api/oauth/callback"
            scopes: api write_repository openid
            confidential: true
          status_code:
          - 200
          - 201
        register: new_oauth_app
      - name: Create a Service object from an inline definition
        kubernetes.core.k8s:
          state: present
          definition:
            kind: Secret
            apiVersion: v1
            metadata:
              name: gitlab-oauth-config
              namespace: devspaces
              labels:
                app.kubernetes.io/part-of: che.eclipse.org
                app.kubernetes.io/component: oauth-scm-configuration
              annotations:
                che.eclipse.org/oauth-scm-server: gitlab
                che.eclipse.org/scm-server-endpoint: "{{ api_url }}"
            type: Opaque
            data:
              id: "{{ new_oauth_app.json.application_id | b64encode }}"
              secret: "{{ new_oauth_app.json.secret | b64encode }}"
